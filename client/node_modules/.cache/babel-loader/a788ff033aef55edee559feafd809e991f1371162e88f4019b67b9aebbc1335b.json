{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Crist\\\\OneDrive\\\\Escritorio\\\\Henry\\\\rick_y_morty\\\\rick_y_morty\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport Cards from \"./components/Cards/Cards.jsx\";\nimport Navbar from './components/Nav/Nav.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacter] = useState([]);\n  const onSearch = id => {\n    fetch(`https://rickandmortyapi.com/api/character/${id}`).then(res => res.json()).then(data => {\n      data.name ? setCharacter([...characters, data]) : alert(\"No encontrado\");\n    }).catch(error => console.log(error));\n  };\n  const onClose = id => {\n    const filtro = characters.filter(char => char.id !== Number(id));\n    setCharacter(filtro);\n  };\n  function randomHandler() {\n    let haveIt = [];\n    let random = (Math.random() * 826).toFixed();\n    random = Number(random);\n    if (!haveIt.includes(random)) {\n      haveIt.push(random);\n      fetch(`https://rickandmortyapi.com/api/character/${random}`).then(response => response.json()).then(data => {\n        if (data.name) {\n          setCharacter(oldChars => [...oldChars, data]);\n        } else {\n          window.alert(\"No hay personajes con ese ID\");\n        }\n      });\n    } else {\n      alert(\"Ya agregaste a todos los personajes\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSearch: onSearch,\n      random: randomHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      characters: characters,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"MNy6luMARtnQ71GSJH7Is9LuP2c=\");\n_c = App;\nexport default App;\n\n// function changeHandler(e) {\n//   e.preventDefault();\n//   let inputValue = e.target.value;\n\n//   setInput(inputValue);\n// }\n\n// async function searchHandler(e) {\n//   e.preventDefault();\n\n//   let found = characters.find((character) => character.id === Number(input));\n\n// if (!found) {\n//     fetch(`https://rickandmortyapi.com/api/character/${input}`)\n//      .then((response) => response.json())\n//      .then((data) => {\n//        if (data.name) {\n//          setCharacters((oldChars) => [...oldChars, data]);\n//        } else {\n//           window.alert(\"No hay personajes con ese ID\");\n//         }\n//       });\n//    } else {\n//     alert(\"el personaje ya fue agregado\");\n//    }\n//   }\n//   if (!found) {\n//     let response = (\n//       await axios.get(`https://rickandmortyapi.com/api/character/${input}`)\n//     ).data;\n\n//     if (response.name) {\n//       setCharacters([...characters, response]);\n//     }\n//   } else {\n//     alert(\"el personaje ya fue agregado\");\n//   }\n// }\n\n// function randomHandler() {\n//    let haveIt = [];\n\n//  let random = (Math.random() * 826).toFixed();\n\n//  random = Number(random);\n\n// if (!haveIt.includes(random)) {\n//     haveIt.push(random);\n//   fetch(`https://rickandmortyapi.com/api/character/${random}`)\n//     .then((response) => response.json())\n//    .then((data) => {\n//       if (data.name) {\n//         setCharacters((oldChars) => [...oldChars, data]);\n//       } else {\n//         window.alert(\"No hay personajes con ese ID\");\n//       }\n//      });\n//  } else {\n//    alert(\"Ya agregaste a todos los personajes\");\n//  }\n\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Cards","Navbar","jsxDEV","_jsxDEV","App","_s","characters","setCharacter","onSearch","id","fetch","then","res","json","data","name","alert","catch","error","console","log","onClose","filtro","filter","char","Number","randomHandler","haveIt","random","Math","toFixed","includes","push","response","oldChars","window","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Crist/OneDrive/Escritorio/Henry/rick_y_morty/rick_y_morty/src/App.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './App.css';\r\nimport Cards from \"./components/Cards/Cards.jsx\";\r\nimport Navbar from './components/Nav/Nav.jsx';\r\n\r\n\r\nfunction App () {\r\n  const [characters,setCharacter] = useState([]);\r\n  \r\n  const onSearch = (id) => { \r\n    fetch(`https://rickandmortyapi.com/api/character/${id}`)\r\n    .then((res) =>res.json())\r\n    .then((data) => {\r\n      data.name ? setCharacter ([...characters,data]):\r\n      alert(\"No encontrado\")\r\n    })\r\n    .catch((error)=>console.log(error))\r\n  }\r\n\r\n  const onClose = (id) => {\r\n    const filtro = characters.filter((char) => char.id !== Number(id));\r\n    setCharacter(filtro)\r\n }\r\n function randomHandler() {\r\n     let haveIt = [];\r\n\r\n   let random = (Math.random() * 826).toFixed();\r\n\r\n   random = Number(random);\r\n\r\n  if (!haveIt.includes(random)) {\r\n      haveIt.push(random);\r\n    fetch(`https://rickandmortyapi.com/api/character/${random}`)\r\n     .then((response) => response.json())\r\n    .then((data) => {\r\n        if (data.name) {\r\n           setCharacter((oldChars) => [...oldChars, data]);\r\n      } else {\r\n          window.alert(\"No hay personajes con ese ID\");\r\n        }\r\n        });\r\n    } else {\r\n      alert(\"Ya agregaste a todos los personajes\");\r\n    }\r\n  \r\n}\r\n \r\n return (\r\n  <div className='App'>\r\n     \r\n     <Navbar\r\n       onSearch={onSearch}\r\n       random={randomHandler}\r\n    />\r\n      <Cards characters={characters} onClose={onClose} />\r\n      \r\n    </div>\r\n       )\r\n}\r\n\r\nexport default App;\r\n  \r\n  // function changeHandler(e) {\r\n  //   e.preventDefault();\r\n  //   let inputValue = e.target.value;\r\n\r\n  //   setInput(inputValue);\r\n  // }\r\n\r\n  // async function searchHandler(e) {\r\n  //   e.preventDefault();\r\n\r\n  //   let found = characters.find((character) => character.id === Number(input));\r\n\r\n    // if (!found) {\r\n    //     fetch(`https://rickandmortyapi.com/api/character/${input}`)\r\n    //      .then((response) => response.json())\r\n    //      .then((data) => {\r\n    //        if (data.name) {\r\n    //          setCharacters((oldChars) => [...oldChars, data]);\r\n    //        } else {\r\n    //           window.alert(\"No hay personajes con ese ID\");\r\n    //         }\r\n    //       });\r\n    //    } else {\r\n    //     alert(\"el personaje ya fue agregado\");\r\n    //    }\r\n    //   }\r\n  //   if (!found) {\r\n  //     let response = (\r\n  //       await axios.get(`https://rickandmortyapi.com/api/character/${input}`)\r\n  //     ).data;\r\n\r\n  //     if (response.name) {\r\n  //       setCharacters([...characters, response]);\r\n  //     }\r\n  //   } else {\r\n  //     alert(\"el personaje ya fue agregado\");\r\n  //   }\r\n  // }\r\n\r\n   \r\n    \r\n    \r\n      // function randomHandler() {\r\n      //    let haveIt = [];\r\n    \r\n      //  let random = (Math.random() * 826).toFixed();\r\n    \r\n      //  random = Number(random);\r\n    \r\n      // if (!haveIt.includes(random)) {\r\n      //     haveIt.push(random);\r\n      //   fetch(`https://rickandmortyapi.com/api/character/${random}`)\r\n      //     .then((response) => response.json())\r\n      //    .then((data) => {\r\n      //       if (data.name) {\r\n      //         setCharacters((oldChars) => [...oldChars, data]);\r\n      //       } else {\r\n      //         window.alert(\"No hay personajes con ese ID\");\r\n      //       }\r\n      //      });\r\n      //  } else {\r\n      //    alert(\"Ya agregaste a todos los personajes\");\r\n      //  }\r\n      \r\n    // }\r\n  \r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}